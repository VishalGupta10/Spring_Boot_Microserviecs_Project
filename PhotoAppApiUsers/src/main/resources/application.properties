server.port=0
spring.application.name=users-ws
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
spring.devtools.restart.enabled=true

eureka.instance.instance-id=${spring.application.name}:${spring.application.instance-id:${random.value}}
eureka.client.fetch-registry=true
#To resolve error of re-run your application with 'debug' enabled.
#logging.level.org.springframework = debug

#Failed to configure a DataSource: 'url' attribute is not specified and no embedded datasource could be configured.
#Failed to determine a suitable driver class
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/spring_cloud_microservices_sergey
spring.datasource.username=root
spring.datasource.password=root

#Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#JWT properties
token.expiration_time=3600000
token.secret=123ljdfsasdfsfda234675675ytuyhgjhgj434k234lkpdf098984o3i123ljdfsj434k234lkpdf098984o3i

#gateway.ip=192.168.1.5
gateway.ip=192.168.1.3
login.url.path=/users/login

#localhost:8012 is a domain and port on which Config server is running. Here, we are configuring user microservice to be a client
#Config server.
#spring.config.import=optional:configserver:http://localhost:8012
#spring.cloud.config.name=users-ws

#RabbitMQ Properties
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#Spring Boot Actuator Properties
management.endpoints.web.exposure.include=*
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true


#Circuit Breaker Configuration Properties
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.albums-ws.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10000ms
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=10
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10

resilience4j.retry.retry-aspect-order=2
resilience4j.retry.instances.albums-ws.max-attempts=3
resilience4j.retry.instances.albums-ws.wait-duration=2s
resilience4j.retry.instances.albums-ws.enable-exponential-backoff=true
resilience4j.retry.instances.albums-ws.exponential-backoff-multiplier=5

management.tracing.sampling.probability=1
logging.pattern.level= %5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]
logging.level.com.photoapp.api.users.service.UsersServiceImpl=DEBUG
logging.file.name=users-ws.log
